// Generated by JSON.stringify of blockNoteSchema in react code
/*
 * Code Snippet
 * ```js
 * delete editor.schema.blockSpecs.video.implementation.node.child
 * JSON.stringify(editor.schema.blockSpecs.video)
 * ```
 */
export const DescriptionSchema = Object.freeze({
  blockSpecs: {
    audio: {
      config: {
        type: 'audio',
        propSchema: {
          backgroundColor: { default: 'default' },
          name: { default: '' },
          url: { default: '' },
          caption: { default: '' },
          showPreview: { default: true },
        },
        content: 'none',
        isFileBlock: true,
        fileBlockAccept: ['audio/*'],
      },
      implementation: {
        node: {
          type: 'node',
          name: 'audio',
          parent: null,
          child: null,
          config: {
            name: 'audio',
            defaultOptions: {},
            content: '',
            group: 'blockContent',
            selectable: true,
          },
          options: {},
          storage: {},
        },
      },
    },
    image: {
      config: {
        type: 'image',
        propSchema: {
          textAlignment: {
            default: 'left',
            values: ['left', 'center', 'right', 'justify'],
          },
          backgroundColor: { default: 'default' },
          name: { default: '' },
          url: { default: '' },
          caption: { default: '' },
          showPreview: { default: true },
          previewWidth: { default: 512 },
        },
        content: 'none',
        isFileBlock: true,
        fileBlockAccept: ['image/*'],
      },
      implementation: {
        node: {
          type: 'node',
          name: 'image',
          parent: null,
          config: {
            name: 'image',
            defaultOptions: {},
            content: '',
            group: 'blockContent',
            selectable: true,
          },
          options: {},
          storage: {},
        },
      },
    },
    video: {
      config: {
        type: 'video',
        propSchema: {
          textAlignment: {
            default: 'left',
            values: ['left', 'center', 'right', 'justify'],
          },
          backgroundColor: { default: 'default' },
          name: { default: '' },
          url: { default: '' },
          caption: { default: '' },
          showPreview: { default: true },
          previewWidth: { default: 512 },
        },
        content: 'none',
        isFileBlock: true,
        fileBlockAccept: ['video/*'],
      },
      implementation: {
        node: {
          type: 'node',
          name: 'video',
          parent: null,
          config: {
            name: 'video',
            defaultOptions: {},
            content: '',
            group: 'blockContent',
            selectable: true,
          },
          options: {},
          storage: {},
        },
      },
    },
    paragraph: {
      config: {
        type: 'paragraph',
        content: 'inline',
        propSchema: {
          backgroundColor: {
            default: 'default',
          },
          textColor: {
            default: 'default',
          },
          textAlignment: {
            default: 'left',
            values: ['left', 'center', 'right', 'justify'],
          },
        },
      },
      implementation: {
        node: {
          type: 'node',
          name: 'paragraph',
          parent: null,
          child: null,
          config: {
            name: 'paragraph',
            defaultOptions: {},
            content: 'inline*',
            group: 'blockContent',
          },
          options: {},
          storage: {},
        },
      },
    },
    heading: {
      config: {
        type: 'heading',
        content: 'inline',
        propSchema: {
          backgroundColor: {
            default: 'default',
          },
          textColor: {
            default: 'default',
          },
          textAlignment: {
            default: 'left',
            values: ['left', 'center', 'right', 'justify'],
          },
          level: {
            default: 1,
            values: [1, 2, 3],
          },
        },
      },
      implementation: {
        node: {
          type: 'node',
          name: 'heading',
          parent: null,
          child: null,
          config: {
            name: 'heading',
            defaultOptions: {},
            content: 'inline*',
            group: 'blockContent',
          },
          options: {},
          storage: {},
        },
      },
    },
    bulletListItem: {
      config: {
        type: 'bulletListItem',
        content: 'inline',
        propSchema: {
          backgroundColor: {
            default: 'default',
          },
          textColor: {
            default: 'default',
          },
          textAlignment: {
            default: 'left',
            values: ['left', 'center', 'right', 'justify'],
          },
        },
      },
      implementation: {
        node: {
          type: 'node',
          name: 'bulletListItem',
          parent: null,
          child: null,
          config: {
            name: 'bulletListItem',
            defaultOptions: {},
            content: 'inline*',
            group: 'blockContent',
          },
          options: {},
          storage: {},
        },
      },
    },
    numberedListItem: {
      config: {
        type: 'numberedListItem',
        content: 'inline',
        propSchema: {
          backgroundColor: {
            default: 'default',
          },
          textColor: {
            default: 'default',
          },
          textAlignment: {
            default: 'left',
            values: ['left', 'center', 'right', 'justify'],
          },
        },
      },
      implementation: {
        node: {
          type: 'node',
          name: 'numberedListItem',
          parent: null,
          child: null,
          config: {
            name: 'numberedListItem',
            defaultOptions: {},
            content: 'inline*',
            group: 'blockContent',
          },
          options: {},
          storage: {},
        },
      },
    },
    hr: {
      config: {
        type: 'hr',
        propSchema: {},
        content: 'none',
      },
      implementation: {
        node: {
          type: 'node',
          name: 'hr',
          parent: null,
          child: null,
          config: {
            name: 'hr',
            defaultOptions: {},
            content: '',
            group: 'blockContent',
            selectable: true,
          },
          options: {},
          storage: {},
        },
      },
    },
  },
  inlineContentSpecs: {
    text: {
      config: 'text',
      implementation: {},
    },
    link: {
      config: 'link',
      implementation: {},
    },
    username: {
      config: {
        type: 'username',
        propSchema: {
          id: {
            default: '1715252911811',
          },
          shortcut: {
            default: '',
          },
          only: {
            default: '',
          },
        },
        content: 'styled',
      },
      implementation: {
        node: {
          type: 'node',
          name: 'username',
          parent: null,
          child: null,
          config: {
            name: 'username',
            defaultOptions: {},
            inline: true,
            group: 'inline',
            selectable: true,
            atom: false,
            content: 'inline*',
          },
          options: {},
          storage: {},
        },
      },
    },
  },
  styleSpecs: {
    bold: {
      config: {
        type: 'bold',
        propSchema: 'boolean',
      },
      implementation: {
        mark: {
          type: 'mark',
          name: 'bold',
          parent: null,
          child: null,
          config: {
            name: 'bold',
            defaultOptions: {},
          },
          options: {
            HTMLAttributes: {},
          },
          storage: {},
        },
      },
    },
    italic: {
      config: {
        type: 'italic',
        propSchema: 'boolean',
      },
      implementation: {
        mark: {
          type: 'mark',
          name: 'italic',
          parent: null,
          child: null,
          config: {
            name: 'italic',
            defaultOptions: {},
          },
          options: {
            HTMLAttributes: {},
          },
          storage: {},
        },
      },
    },
    underline: {
      config: {
        type: 'underline',
        propSchema: 'boolean',
      },
      implementation: {
        mark: {
          type: 'mark',
          name: 'underline',
          parent: null,
          child: null,
          config: {
            name: 'underline',
            defaultOptions: {},
          },
          options: {
            HTMLAttributes: {},
          },
          storage: {},
        },
      },
    },
    strike: {
      config: {
        type: 'strike',
        propSchema: 'boolean',
      },
      implementation: {
        mark: {
          type: 'mark',
          name: 'strike',
          parent: null,
          child: null,
          config: {
            name: 'strike',
            defaultOptions: {},
          },
          options: {
            HTMLAttributes: {},
          },
          storage: {},
        },
      },
    },
    code: {
      config: {
        type: 'code',
        propSchema: 'boolean',
      },
      implementation: {
        mark: {
          type: 'mark',
          name: 'code',
          parent: null,
          child: null,
          config: {
            name: 'code',
            defaultOptions: {},
            excludes: '_',
            code: true,
            exitable: true,
          },
          options: {
            HTMLAttributes: {},
          },
          storage: {},
        },
      },
    },
    textColor: {
      config: {
        type: 'textColor',
        propSchema: 'string',
      },
      implementation: {
        mark: {
          type: 'mark',
          name: 'textColor',
          parent: null,
          child: null,
          config: {
            name: 'textColor',
            defaultOptions: {},
          },
          options: {},
          storage: {},
        },
      },
    },
    backgroundColor: {
      config: {
        type: 'backgroundColor',
        propSchema: 'string',
      },
      implementation: {
        mark: {
          type: 'mark',
          name: 'backgroundColor',
          parent: null,
          child: null,
          config: {
            name: 'backgroundColor',
            defaultOptions: {},
          },
          options: {},
          storage: {},
        },
      },
    },
  },
  blockSchema: {
    paragraph: {
      type: 'paragraph',
      content: 'inline',
      propSchema: {
        backgroundColor: {
          default: 'default',
        },
        textColor: {
          default: 'default',
        },
        textAlignment: {
          default: 'left',
          values: ['left', 'center', 'right', 'justify'],
        },
      },
    },
    heading: {
      type: 'heading',
      content: 'inline',
      propSchema: {
        backgroundColor: {
          default: 'default',
        },
        textColor: {
          default: 'default',
        },
        textAlignment: {
          default: 'left',
          values: ['left', 'center', 'right', 'justify'],
        },
        level: {
          default: 1,
          values: [1, 2, 3],
        },
      },
    },
    bulletListItem: {
      type: 'bulletListItem',
      content: 'inline',
      propSchema: {
        backgroundColor: {
          default: 'default',
        },
        textColor: {
          default: 'default',
        },
        textAlignment: {
          default: 'left',
          values: ['left', 'center', 'right', 'justify'],
        },
      },
    },
    numberedListItem: {
      type: 'numberedListItem',
      content: 'inline',
      propSchema: {
        backgroundColor: {
          default: 'default',
        },
        textColor: {
          default: 'default',
        },
        textAlignment: {
          default: 'left',
          values: ['left', 'center', 'right', 'justify'],
        },
      },
    },
    hr: {
      type: 'hr',
      propSchema: {},
      content: 'none',
    },
    default: {
      type: 'default',
      propSchema: {},
      content: 'none',
    },
  },
  inlineContentSchema: {
    text: 'text',
    link: 'link',
    username: {
      type: 'username',
      propSchema: {
        id: {
          default: '',
        },
        shortcut: {
          default: '',
        },
        only: {
          default: '',
        },
      },
      content: 'styled',
    },
  },
  styleSchema: {
    bold: {
      type: 'bold',
      propSchema: 'boolean',
    },
    italic: {
      type: 'italic',
      propSchema: 'boolean',
    },
    underline: {
      type: 'underline',
      propSchema: 'boolean',
    },
    strike: {
      type: 'strike',
      propSchema: 'boolean',
    },
    code: {
      type: 'code',
      propSchema: 'boolean',
    },
    textColor: {
      type: 'textColor',
      propSchema: 'string',
    },
    backgroundColor: {
      type: 'backgroundColor',
      propSchema: 'string',
    },
  },
});
